apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply from: 'native.gradle'

group 'io.tanker'
version 'dev'


android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28

        ndk {
            moduleName "tanker-bindings-jni"
        }
    }
    buildToolsVersion '28.0.3'
    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            packagingOptions {
                doNotStrip "**/*.so"
            }
        }
    }
    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen {false}
                showStandardStreams = true
            }
            systemProperty "jna.library.path", projectDir.absolutePath + "/conan/host/lib"
            systemProperty "TANKER_CONFIG_NAME", System.getProperty("TANKER_CONFIG_NAME")
            systemProperty "TANKER_CONFIG_FILEPATH", System.getProperty("TANKER_CONFIG_FILEPATH")
        }
    }

    sourceSets.main {
        java.srcDirs += 'src/main/kotlin'
    }

    sourceSets.test {
        java.srcDirs += 'src/test/kotlin'
    }

    sourceSets.debug {
        jni.srcDirs = []
        jniLibs.srcDir 'src/debug/jniLibs'
    }

    sourceSets.release {
        jni.srcDirs = []
        jniLibs.srcDir 'src/release/jniLibs'
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javaDocJar(type: Jar, dependsOn: dokka) {
    from dokka.outputDirectory
    classifier = 'javadoc'
}

dokka {
    outputFormat = 'javadoc'

    // Exclude JNA R class
    packageOptions {
        prefix = "com.sun.jna"
        suppress = true
    }

    // Exclude our R class
    packageOptions {
        prefix = "io.tanker.tanker_bindings"
        suppress = true
    }

    // Exclude low-level JNA bindings
    packageOptions {
        prefix = "io.tanker.bindings"
        suppress = true
    }

    // Exclude Identity api
    packageOptions {
        prefix = "io.tanker.api.Identity"
        suppress = true
    }
}

artifacts {
    archives javaDocJar
    archives sourcesJar
}


uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file:///${findProperty("artifactsPath")}")
        }
    }
}

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'
    api 'net.java.dev.jna:jna:4.5.1@aar'
    implementation 'com.android.support:support-compat:28.0.0'
    testImplementation 'io.kotlintest:kotlintest-core:3.2.1'
    testImplementation 'io.kotlintest:kotlintest-runner-junit5:3.2.1'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    testImplementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.7'
    testImplementation 'org.slf4j:slf4j-nop:1.7.25'
    testImplementation files('jna.jar')
    testImplementation files('conan/host/lib/tanker-native.jar')
}
