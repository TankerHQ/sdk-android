variables:
  GIT_SUBMODULE_STRATEGY: recursive

before_script:
  - poetry install
  - export PATH=$(poetry env info -p)/bin:$PATH

stages:
  - check
  - deploy

.testreports:
  artifacts:
    paths:
      - tests_report
    expire_in: 1 month

check/deployed-native:
  extends: .testreports
  rules:
    - if: $CI_COMMIT_TAG
    # We can tag an alpha/beta version on a commit that is part of a MR
    # This will trigger two pipelines, one linked to the MR, the job will be manual
    # The other pipeline will run check/deployed-native automatically, and will also create the deploy job
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
      allow_failure: true
  stage: check
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=deployed
  tags:
    - linux

check/native-from-sources:
  extends: .testreports
  rules:
    - if: $CI_COMMIT_TAG == null && $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
      allow_failure: true
    - if: $CI_MERGE_REQUEST_ID == null && $CI_PIPELINE_SOURCE == "push" && ($CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_REF_NAME =~ /\Afeat\/.+\z/)
  stage: check
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=same-as-branch
  tags:
    - linux

check/downstream:
  stage: check
  tags:
    - linux
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
  script:
    - poetry run python run-ci.py reset-branch $UPSTREAM_BRANCH_NAME
    - poetry run python run-ci.py download-artifacts --project-id=$UPSTREAM_PROJECT_ID --pipeline-id=$UPSTREAM_PIPELINE_ID --job-name=$UPSTREAM_JOB_NAME
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=upstream


nightly:
  stage: check
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=same-as-branch
  tags:
    - linux

deploy:
  extends: .testreports
  stage: deploy
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_TAG
      when: manual
  script:
    - poetry run python run-ci.py  --isolate-conan-user-home deploy --git-tag ${CI_COMMIT_TAG}
  tags:
    - linux

mirror:
  tags:
    - linux
  stage: deploy
  rules:
    - if: $CI_PIPELINE_SOURCE != "push"
      when: never
    - if: $CI_COMMIT_REF_NAME =~ /\Av[0-9.]+\z/
    - if: $CI_COMMIT_REF_NAME =~ /\Arelease\/.*\z/
    - if: $CI_COMMIT_REF_NAME =~ /\Afeat\/.+\z/
    - if: $CI_COMMIT_REF_NAME == "master"
  script:
    - poetry run python run-ci.py mirror
